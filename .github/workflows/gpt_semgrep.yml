name: Semgrep Full Scan with Issues

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * 6'

jobs:
  semgrep-full:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Clone application source code
      - name: Clone application source code
        uses: actions/checkout@v3

      # Step 2: Install dependencies (jq, GitHub CLI)
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y gh

      # Step 3: Full scan with Semgrep
      - name: Full scan with Semgrep
        run: |
          semgrep \
            --sarif --output report.sarif \
            --metrics=off \
            --config="p/default"
        env:
          PATH: /usr/local/bin:$PATH  # Ensure semgrep is in PATH

      # Step 4: Save report as pipeline artifact
      - name: Save report as pipeline artifact
        uses: actions/upload-artifact@v3
        with:
          name: report.sarif
          path: report.sarif

      # Step 5: Parse SARIF and create GitHub Issues
      - name: Parse SARIF and Create Issues
        run: |
          # Parse SARIF and extract results
          results=$(jq -c '.runs[].tool.driver.rules[]' report.sarif)

          # Iterate through each result and create an issue
          echo "${results}" | while read -r result; do
            rule_id=$(echo "$result" | jq -r '.id')
            description=$(echo "$result" | jq -r '.fullDescription.text')
            help_url=$(echo "$result" | jq -r '.helpUri')
            severity=$(echo "$result" | jq -r '.properties.precision')

            # Create GitHub Issue
            gh api repos/${{ github.repository }}/issues \
              -f title="Semgrep Issue: ${rule_id}" \
              -f body="**Description:**\n${description}\n\n**Severity:** ${severity}\n\n[Learn more about this issue](${help_url})" \
              -f labels="semgrep,security"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
